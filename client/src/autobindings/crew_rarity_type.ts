// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
import {
  AlgebraicType as __AlgebraicTypeValue,
  BinaryReader as __BinaryReader,
  BinaryWriter as __BinaryWriter,
  ClientCache as __ClientCache,
  ConnectionId as __ConnectionId,
  DbConnectionBuilder as __DbConnectionBuilder,
  DbConnectionImpl as __DbConnectionImpl,
  Identity as __Identity,
  SubscriptionBuilderImpl as __SubscriptionBuilderImpl,
  TableCache as __TableCache,
  TimeDuration as __TimeDuration,
  Timestamp as __Timestamp,
  deepEqual as __deepEqual,
  type AlgebraicType as __AlgebraicTypeType,
  type AlgebraicTypeVariants as __AlgebraicTypeVariants,
  type CallReducerFlags as __CallReducerFlags,
  type ErrorContextInterface as __ErrorContextInterface,
  type Event as __Event,
  type EventContextInterface as __EventContextInterface,
  type ReducerEventContextInterface as __ReducerEventContextInterface,
  type SubscriptionEventContextInterface as __SubscriptionEventContextInterface,
} from "spacetimedb";
import * as CrewRarityVariants from './crew_rarity_variants'

// The tagged union or sum type for the algebraic type `CrewRarity`.
export type CrewRarity = CrewRarityVariants.Common |
  CrewRarityVariants.Rare |
  CrewRarityVariants.Epic |
  CrewRarityVariants.Legendary;

// A value with helper functions to construct the type.
export const CrewRarity = {
  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  Common: { tag: "Common" } as const,
  Rare: { tag: "Rare" } as const,
  Epic: { tag: "Epic" } as const,
  Legendary: { tag: "Legendary" } as const,

  getTypeScriptAlgebraicType(): __AlgebraicTypeType {
    return __AlgebraicTypeValue.Sum({
      variants: [
        { name: "Common", algebraicType: __AlgebraicTypeValue.Product({ elements: [] }) },
        { name: "Rare", algebraicType: __AlgebraicTypeValue.Product({ elements: [] }) },
        { name: "Epic", algebraicType: __AlgebraicTypeValue.Product({ elements: [] }) },
        { name: "Legendary", algebraicType: __AlgebraicTypeValue.Product({ elements: [] }) },
      ]
    });
  },

  serialize(writer: __BinaryWriter, value: CrewRarity): void {
      __AlgebraicTypeValue.serializeValue(writer, CrewRarity.getTypeScriptAlgebraicType(), value);
  },

  deserialize(reader: __BinaryReader): CrewRarity {
      return __AlgebraicTypeValue.deserializeValue(reader, CrewRarity.getTypeScriptAlgebraicType());
  },

}

export default CrewRarity;


